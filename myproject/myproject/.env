from rest_framework import generics, permissionsiEpURSDyczc
from rest_framework.response import Response
from rest_framework_simplejwt.views import TokenObtainPairViewfrom django.contrib.auth import get_user_modelfrom .serializers import UserSerializer, LoginSerializerfrom rest_framework.decorators import api_view, permission_classesfrom rest_framework.response import Responsefrom rest_framework import permissionsfrom django.db.models import Qfrom .models import RestaurantReviewfrom .serializers import RestaurantReviewSerializerUser = get_user_model()class SignUpView(generics.CreateAPIView):    queryset = User.objects.all()    serializer_class = UserSerializer    permission_classes = [permissions.AllowAny]class SignInView(TokenObtainPairView):    serializer_class = LoginSerializer@api_view(["GET"])@permission_classes([permissions.AllowAny])def search_restaurant(request):    query = request.GET.get("q", "")    if not query:        return Response({"message": "請輸入店名或地址"}, status=400)    restaurants = RestaurantReview.objects.filter(        Q(restaurant_name__icontains=query) | Q(address__icontains=query)    )    if not restaurants.exists():        return Response({"message": "找不到符合的餐廳"}, status=404)    serializer = RestaurantReviewSerializer(restaurants, many=True)    return Response(serializer.data)

DEBUG=True
SECRET_KEY='your-secret-key'
DATABASE_URL=postgres://user:password@localhost:5432/mydatabase
ALLOWED_HOSTS=localhost,
CORS_ALLOWED_ORIGINS=http://localhost:3000